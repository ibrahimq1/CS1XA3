var _user$project$EscapeLavaMaze$inRect = F2(
	function (model, rec) {
		return (_elm_lang$core$Native_Utils.cmp(model.x, rec.x - 30) > -1) && ((_elm_lang$core$Native_Utils.cmp(model.x, (rec.x + rec.w) + 30) < 1) && ((_elm_lang$core$Native_Utils.cmp(model.y, (rec.y + rec.h) + 30) < 1) && (_elm_lang$core$Native_Utils.cmp(model.y, rec.y - 30) > -1)));
	});
var _user$project$EscapeLavaMaze$valInList = F3(
	function (level, defaultState, pos) {
		valInList:
		while (true) {
			var _p0 = level;
			if (_p0.ctor === '[]') {
				return false;
			} else {
				if (_elm_lang$core$Native_Utils.eq(_p0._0, defaultState)) {
					return true;
				} else {
					var _v1 = _p0._1,
						_v2 = defaultState,
						_v3 = pos + 1;
					level = _v1;
					defaultState = _v2;
					pos = _v3;
					continue valInList;
				}
			}
		}
	});
var _user$project$EscapeLavaMaze$defaultState = true;
var _user$project$EscapeLavaMaze$inRectsArea = F2(
	function (level, model) {
		return A3(
			_user$project$EscapeLavaMaze$valInList,
			A2(
				_elm_lang$core$List$map,
				_user$project$EscapeLavaMaze$inRect(model),
				level),
			_user$project$EscapeLavaMaze$defaultState,
			0);
	});
var _user$project$EscapeLavaMaze$levelRects = function (model) {
	var _p1 = model.level;
	switch (_p1) {
		case 1:
			return {
				ctor: '::',
				_0: {x: 0, y: 600, w: 1200, h: 50, state: false},
				_1: {
					ctor: '::',
					_0: {x: 0, y: 450, w: 1100, h: 50, state: false},
					_1: {
						ctor: '::',
						_0: {x: 100, y: 300, w: 1100, h: 50, state: false},
						_1: {
							ctor: '::',
							_0: {x: 0, y: 150, w: 1100, h: 50, state: false},
							_1: {
								ctor: '::',
								_0: {x: 100, y: 0, w: 1100, h: 50, state: false},
								_1: {ctor: '[]'}
							}
						}
					}
				}
			};
		case 2:
			return {
				ctor: '::',
				_0: {x: 0, y: 600, w: 1200, h: 50, state: false},
				_1: {
					ctor: '::',
					_0: {x: 0, y: 450, w: 1100, h: 50, state: false},
					_1: {
						ctor: '::',
						_0: {x: 100, y: 300, w: 1100, h: 50, state: false},
						_1: {
							ctor: '::',
							_0: {x: 0, y: 150, w: 1100, h: 50, state: false},
							_1: {
								ctor: '::',
								_0: {x: 100, y: 0, w: 1100, h: 50, state: false},
								_1: {
									ctor: '::',
									_0: {x: 800, y: 0, w: 400, h: 50, state: false},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			};
		default:
			return {ctor: '[]'};
	}
};
var _user$project$EscapeLavaMaze$svgBall = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'background', _1: 'url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/18515/grumpy.jpeg)'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'background-size', _1: 'cover'},
			_1: {ctor: '[]'}
		}
	});
var _user$project$EscapeLavaMaze$lavalStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'align', _1: 'center'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'background-image', _1: 'url(http://mauipride.org/wp-content/uploads/2015/03/Seamless-Lava-Crack-Background-1024x640.jpg)'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'border-style', _1: 'solid solid solid solid'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'border-color', _1: 'grey'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '8%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'background-repeat', _1: 'no-repeat'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'background-size', _1: 'cover'},
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		}
	});
var _user$project$EscapeLavaMaze$level2View = function (model) {
	var posY = _elm_lang$core$Basics$toString(model.y);
	var posX = _elm_lang$core$Basics$toString(model.x);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$align('center'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$svg$Svg$svg,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$width('1200'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$height('650'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$align('center'),
							_1: {
								ctor: '::',
								_0: _user$project$EscapeLavaMaze$lavalStyle,
								_1: {ctor: '[]'}
							}
						}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$circle,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$cx(posX),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$cy(posY),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$r('30'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill('sandybrown'),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$image,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$x('0'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$y('600'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$width('580'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$height('50px'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$image,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$x('670'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$y('600'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$width('580'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$height('50px'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$svg$Svg$image,
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$x('0'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$y('450'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$width('1100'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$height('50px'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$svg$Svg$image,
										{
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$x('100'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$y('300'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$width('100'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$height('50px'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
															_1: {
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
																_1: {ctor: '[]'}
															}
														}
													}
												}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$svg$Svg$image,
											{
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$x('700'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$y('300'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$width('400'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$height('50px'),
															_1: {
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												}
											},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$svg$Svg$image,
												{
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$x('300'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$y('300'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$width('200'),
															_1: {
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$height('50px'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
																		_1: {ctor: '[]'}
																	}
																}
															}
														}
													}
												},
												{ctor: '[]'}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$svg$Svg$image,
													{
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$x('0'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$y('150'),
															_1: {
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$width('100'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$svg$Svg_Attributes$height('50px'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
																			_1: {ctor: '[]'}
																		}
																	}
																}
															}
														}
													},
													{ctor: '[]'}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$svg$Svg$image,
														{
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$x('350'),
															_1: {
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$y('150'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$svg$Svg_Attributes$width('500'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$svg$Svg_Attributes$height('50px'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
																				_1: {ctor: '[]'}
																			}
																		}
																	}
																}
															}
														},
														{ctor: '[]'}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$svg$Svg$image,
															{
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$x('100'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$svg$Svg_Attributes$y('0'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$svg$Svg_Attributes$width('400'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$svg$Svg_Attributes$height('50px'),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
																				_1: {
																					ctor: '::',
																					_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
																					_1: {ctor: '[]'}
																				}
																			}
																		}
																	}
																}
															},
															{ctor: '[]'}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$svg$Svg$image,
																{
																	ctor: '::',
																	_0: _elm_lang$svg$Svg_Attributes$x('800'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$svg$Svg_Attributes$y('0'),
																		_1: {
																			ctor: '::',
																			_0: _elm_lang$svg$Svg_Attributes$width('400'),
																			_1: {
																				ctor: '::',
																				_0: _elm_lang$svg$Svg_Attributes$height('50px'),
																				_1: {
																					ctor: '::',
																					_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
																					_1: {
																						ctor: '::',
																						_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
																						_1: {ctor: '[]'}
																					}
																				}
																			}
																		}
																	}
																},
																{ctor: '[]'}),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$EscapeLavaMaze$level1View = function (model) {
	var posY = _elm_lang$core$Basics$toString(model.y);
	var posX = _elm_lang$core$Basics$toString(model.x);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$align('center'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$svg$Svg$svg,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$width('1200'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$height('650'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$align('center'),
							_1: {
								ctor: '::',
								_0: _user$project$EscapeLavaMaze$lavalStyle,
								_1: {ctor: '[]'}
							}
						}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$circle,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$cx(posX),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$cy(posY),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$r('30'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$fill('sandybrown'),
										_1: {ctor: '[]'}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$image,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$x('0'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$y('600'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$width('1200'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$height('50px'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$svg$Svg$image,
								{
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$x('0'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$y('450'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$width('1100'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$height('50px'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$svg$Svg$image,
									{
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$x('100'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$y('300'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$width('1100'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$height('50px'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$svg$Svg$image,
										{
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$x('0'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$y('150'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$width('1100'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$height('50px'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
															_1: {
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
																_1: {ctor: '[]'}
															}
														}
													}
												}
											}
										},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$svg$Svg$image,
											{
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$x('100'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$y('0'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$width('1100'),
														_1: {
															ctor: '::',
															_0: _elm_lang$svg$Svg_Attributes$height('50px'),
															_1: {
																ctor: '::',
																_0: _elm_lang$svg$Svg_Attributes$preserveAspectRatio('none'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$svg$Svg_Attributes$xlinkHref('https://media.giphy.com/media/l378sOvgHwmw7G21q/giphy.gif'),
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												}
											},
											{ctor: '[]'}),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$EscapeLavaMaze$winscreenStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'height', _1: '100%'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'background-image', _1: 'url(https://media.giphy.com/media/7SsXQOg7WKCl2/giphy.gif)'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'padding-bottom', _1: '20%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'opacity', _1: '0.9'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'background-repeat', _1: 'no-repeat'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'background-size', _1: 'cover'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'padding-top', _1: '50px'},
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$EscapeLavaMaze$divStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'height', _1: '95%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'width', _1: '95%'},
			_1: {ctor: '[]'}
		}
	});
var _user$project$EscapeLavaMaze$titlebarStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'font-size', _1: '70px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'padding-top', _1: '10%'},
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _user$project$EscapeLavaMaze$descriptionStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'font-size', _1: '50px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'opacity', _1: '1'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '50px'},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _user$project$EscapeLavaMaze$buttonstyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'black'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'border', _1: '2px solid black'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'width', _1: '250px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'height', _1: '50px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'opacity', _1: '0.8'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '4%'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'font-size', _1: '20px'},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$EscapeLavaMaze$menuStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'height', _1: '100%'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'background-image', _1: 'url(https://media.giphy.com/media/3ov9jYd9chmwCNQl8c/giphy.gif)'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'padding-bottom', _1: '21%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '-7.5%'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'opacity', _1: '0.9'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'background-repeat', _1: 'no-repeat'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'background-size', _1: 'cover'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'font-family', _1: 'Lucida Console'},
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	});
var _user$project$EscapeLavaMaze$Model = F4(
	function (a, b, c, d) {
		return {x: a, y: b, p: c, level: d};
	});
var _user$project$EscapeLavaMaze$Rect = F5(
	function (a, b, c, d, e) {
		return {x: a, y: b, w: c, h: d, state: e};
	});
var _user$project$EscapeLavaMaze$Playing = {ctor: 'Playing'};
var _user$project$EscapeLavaMaze$init = {
	ctor: '_Tuple2',
	_0: {x: 625, y: 550, p: _user$project$EscapeLavaMaze$Playing, level: 0},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$EscapeLavaMaze$keyMsgUpdate = F2(
	function (keyCode, model) {
		if (_elm_lang$core$Native_Utils.cmp(model.y, -18) < 0) {
			return {
				ctor: '_Tuple2',
				_0: {x: 625, y: 550, p: _user$project$EscapeLavaMaze$Playing, level: model.level + 1},
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			if (_elm_lang$core$Native_Utils.cmp(model.x, 25) < 1) {
				return {
					ctor: '_Tuple2',
					_0: {x: model.x + 10, y: model.y, p: _user$project$EscapeLavaMaze$Playing, level: model.level},
					_1: _elm_lang$core$Platform_Cmd$none
				};
			} else {
				if (_elm_lang$core$Native_Utils.cmp(model.y, 570) > -1) {
					return {
						ctor: '_Tuple2',
						_0: {x: model.x, y: model.y - 10, p: _user$project$EscapeLavaMaze$Playing, level: model.level},
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					if (_elm_lang$core$Native_Utils.cmp(model.x, 1170) > -1) {
						return {
							ctor: '_Tuple2',
							_0: {x: model.x - 10, y: model.y, p: _user$project$EscapeLavaMaze$Playing, level: model.level},
							_1: _elm_lang$core$Platform_Cmd$none
						};
					} else {
						if (A2(
							_user$project$EscapeLavaMaze$inRectsArea,
							_user$project$EscapeLavaMaze$levelRects(model),
							model)) {
							return {
								ctor: '_Tuple2',
								_0: {x: model.x, y: model.y + 60, p: _user$project$EscapeLavaMaze$Playing, level: model.level},
								_1: _elm_lang$core$Platform_Cmd$none
							};
						} else {
							var _p2 = keyCode;
							switch (_p2) {
								case 40:
									return {
										ctor: '_Tuple2',
										_0: {x: model.x, y: model.y + 30, p: _user$project$EscapeLavaMaze$Playing, level: model.level},
										_1: _elm_lang$core$Platform_Cmd$none
									};
								case 38:
									return {
										ctor: '_Tuple2',
										_0: {x: model.x, y: model.y - 30, p: _user$project$EscapeLavaMaze$Playing, level: model.level},
										_1: _elm_lang$core$Platform_Cmd$none
									};
								case 39:
									return {
										ctor: '_Tuple2',
										_0: {x: model.x + 30, y: model.y, p: _user$project$EscapeLavaMaze$Playing, level: model.level},
										_1: _elm_lang$core$Platform_Cmd$none
									};
								case 37:
									return {
										ctor: '_Tuple2',
										_0: {x: model.x - 30, y: model.y, p: _user$project$EscapeLavaMaze$Playing, level: model.level},
										_1: _elm_lang$core$Platform_Cmd$none
									};
								default:
									return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
							}
						}
					}
				}
			}
		}
	});
var _user$project$EscapeLavaMaze$update = F2(
	function (msg, model) {
		var _p3 = msg;
		if (_p3.ctor === 'KeyMsg') {
			return A2(_user$project$EscapeLavaMaze$keyMsgUpdate, _p3._0, model);
		} else {
			return {
				ctor: '_Tuple2',
				_0: {x: 625, y: 550, p: _user$project$EscapeLavaMaze$Playing, level: 1},
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$EscapeLavaMaze$ResetMsg = {ctor: 'ResetMsg'};
var _user$project$EscapeLavaMaze$mainMenu = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$EscapeLavaMaze$menuStyle,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$p,
				{
					ctor: '::',
					_0: _user$project$EscapeLavaMaze$titlebarStyle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Ready to Escape the maze?'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{
						ctor: '::',
						_0: _user$project$EscapeLavaMaze$descriptionStyle,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Objective: Escape The Lava Maze'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$p,
						{
							ctor: '::',
							_0: _user$project$EscapeLavaMaze$descriptionStyle,
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Press the arrow keys to move'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$p,
							{
								ctor: '::',
								_0: _user$project$EscapeLavaMaze$descriptionStyle,
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('The wall might suck you in!'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$p,
								{
									ctor: '::',
									_0: _user$project$EscapeLavaMaze$descriptionStyle,
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Some walls are invisible.'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$button,
									{
										ctor: '::',
										_0: _user$project$EscapeLavaMaze$buttonstyle,
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(_user$project$EscapeLavaMaze$ResetMsg),
											_1: {ctor: '[]'}
										}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Let\'s Play'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$EscapeLavaMaze$winScreen = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _user$project$EscapeLavaMaze$winscreenStyle,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$p,
				{
					ctor: '::',
					_0: _user$project$EscapeLavaMaze$descriptionStyle,
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Congratulations!!!'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{
						ctor: '::',
						_0: _user$project$EscapeLavaMaze$descriptionStyle,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('You\'ve successfully crossed the maze'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _user$project$EscapeLavaMaze$buttonstyle,
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$EscapeLavaMaze$ResetMsg),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Play Again'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$EscapeLavaMaze$view = function (model) {
	if (_elm_lang$core$Native_Utils.eq(model.p, _user$project$EscapeLavaMaze$Playing)) {
		var _p4 = model.level;
		switch (_p4) {
			case 0:
				return _user$project$EscapeLavaMaze$mainMenu(model);
			case 1:
				return _user$project$EscapeLavaMaze$level1View(model);
			case 2:
				return _user$project$EscapeLavaMaze$level2View(model);
			case 3:
				return _user$project$EscapeLavaMaze$winScreen(model);
			default:
				return _user$project$EscapeLavaMaze$mainMenu(model);
		}
	} else {
		return _user$project$EscapeLavaMaze$mainMenu(model);
	}
};
var _user$project$EscapeLavaMaze$KeyMsg = function (a) {
	return {ctor: 'KeyMsg', _0: a};
};
var _user$project$EscapeLavaMaze$subscriptions = function (model) {
	return _elm_lang$keyboard$Keyboard$downs(_user$project$EscapeLavaMaze$KeyMsg);
};
var _user$project$EscapeLavaMaze$main = _elm_lang$html$Html$program(
	{init: _user$project$EscapeLavaMaze$init, view: _user$project$EscapeLavaMaze$view, update: _user$project$EscapeLavaMaze$update, subscriptions: _user$project$EscapeLavaMaze$subscriptions})();
